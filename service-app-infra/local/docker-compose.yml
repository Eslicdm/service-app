# service-app-angular port = 4200
services:
# member-service port = 8081
  member_service_db:
    image: postgres:17
    container_name: member_service_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${MEMBER_DB_USERNAME}
      POSTGRES_PASSWORD: ${MEMBER_DB_PASSWORD}
      POSTGRES_DB: ${MEMBER_DB_NAME}
    ports:
      - "5435:5432"
    volumes:
      - member-service-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MEMBER_DB_USERNAME} -d ${MEMBER_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - service-app-network

# pricing-service port = 8082
  pricing_service_db:
    image: mongo:7.0
    container_name: pricing_service_db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PRICING_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${PRICING_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${PRICING_DB_NAME}
    ports:
      - "27017:27017"
    volumes:
      - pricing-service-db-data:/data/db
    networks:
      - service-app-network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - service-app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PW}
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - service-app-network

volumes:
  member-service-db-data:
  pricing-service-db-data:
  redis-data:
  rabbitmq-data:

networks:
  service-app-network:
    driver: bridge